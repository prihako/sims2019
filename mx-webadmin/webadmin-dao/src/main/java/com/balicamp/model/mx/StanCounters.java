package com.balicamp.model.mx;

// Generated Dec 13, 2012 12:58:42 PM by Hibernate Tools 3.4.0.CR1

import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;

/**
 * StanCounters generated by hbm2java
 * @version $Id: StanCounters.java 503 2013-05-24 08:13:16Z rudi.sadria $
 */
@Entity
@Table(name = "stan_counters", uniqueConstraints = @UniqueConstraint(columnNames = "endpoint_id"))
public class StanCounters implements java.io.Serializable {

	private static final long serialVersionUID = 1L;
	private StanCountersId id;
	private Endpoints endpoints;

	public StanCounters() {
	}

	public StanCounters(StanCountersId id, Endpoints endpoints) {
		this.id = id;
		this.endpoints = endpoints;
	}

	@EmbeddedId
	@AttributeOverrides({ @AttributeOverride(name = "endpointId", column = @Column(name = "endpoint_id", unique = true,
			nullable = false)), @AttributeOverride(name = "value", column = @Column(name = "value", nullable = false)), @AttributeOverride(
			name = "maxValue", column = @Column(name = "max_value", nullable = false)) })
	public StanCountersId getId() {
		return this.id;
	}

	public void setId(StanCountersId id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "endpoint_id", unique = true, nullable = false, insertable = false, updatable = false)
	public Endpoints getEndpoints() {
		return this.endpoints;
	}

	public void setEndpoints(Endpoints endpoints) {
		this.endpoints = endpoints;
	}

}
