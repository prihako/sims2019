<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
            http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
            http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
            http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd">
   
      <bean id="mxDataSource" class="org.postgresql.ds.PGPoolingDataSource">
        <property name="serverName" value="localhost" />
        <property name="portNumber" value="5432" />
        <property name="databaseName" value="mx2" />
        <property name="user" value="mx_usr" />
        <property name="password" value="mx_pwd" />
        <property name="tcpKeepAlive" value="true" />
        
        <property name="initialConnections" value="4" />
        <property name="maxConnections" value="3000" />
    </bean>

    <!-- Hibernate SessionFactory -->
    <bean id="mxHibernateSessionFactory" class="com.balicamp.dao.AdminHibernateSessionFactory">
        <property name="dataSource" ref="mxDataSource"/>
        
        <property name="entityPackages">
        	<list>
        		<value>com.balicamp.model.mx</value>        		
        	</list>
        </property>
                
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">org.hibernate.dialect.PostgreSQLDialect</prop>
				<prop key="hibernate.query.substitutions">true 'Y', false 'N'</prop>
				<prop key="hibernate.show_sql">false</prop>
				<prop key="hibernate.format_sql">false</prop>
				
				<prop key="hibernate.generate_statistics">false</prop>
				<prop key="hibernate.bytecode.use_reflection_optimizer">true</prop>
				<prop key="hibernate.max_fetch_depth">4</prop>
				<prop key="hibernate.jdbc.use_streams_for_binary">true</prop>
				
				<prop key="hibernate.connection.release_mode">after_transaction</prop>
            </props>
        </property>
    </bean>

    <!-- Transaction manager for a single Hibernate SessionFactory (alternative to JTA) -->
    <bean id="mxTransactionManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager">
        <property name="sessionFactory" ref="mxHibernateSessionFactory"/>
    </bean>

    <!-- Generic Dao - can be used when doing standard CRUD -->
    <bean id="mxDao" class="com.balicamp.dao.hibernate.BaseDaoHibernate">
        <property name="sessionFactory" ref="mxHibernateSessionFactory"/>
    </bean>

    <!-- Scan Spring Component with annot @Repository, @Service -->
    <!-- <context:component-scan base-package="com.balicamp.dao.hibernate.admin" /> -->
    <context:component-scan base-package="com.balicamp.dao.mx" />
    <context:component-scan base-package="com.balicamp.util" />
    <context:component-scan base-package="com.balicamp.dao.hibernate" />
    <context:component-scan base-package="com.balicamp.dao.user" />

</beans>
