package com.balicamp.model.mx;

// Generated Dec 13, 2012 12:58:42 PM by Hibernate Tools 3.4.0.CR1

import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Transient;
import javax.persistence.UniqueConstraint;

import com.balicamp.model.admin.BaseAdminModel;

/**
 * TransactionFee generated by hbm2java
 * @version $Id: TransactionFee.java 503 2013-05-24 08:13:16Z rudi.sadria $
 */
@Entity
@Table(name = "transaction_fee", uniqueConstraints = @UniqueConstraint(
		columnNames = { "transaction_id", "channel_id", "identifier" }))
public class TransactionFee extends BaseAdminModel implements java.io.Serializable {

	private static final long serialVersionUID = 1L;
	private TransactionFeeId id;
	private Transactions transactions;
	private Endpoints endpoints;


	public TransactionFee() {
	}

	public TransactionFee(TransactionFeeId id, Transactions transactions, Endpoints endpoints) {
		this.id = id;
		this.transactions = transactions;
		this.endpoints = endpoints;
	}

	@EmbeddedId
	@AttributeOverrides({ @AttributeOverride(name = "transactionId", column = @Column(name = "transaction_id",
			nullable = false)), @AttributeOverride(name = "channelId", column = @Column(name = "channel_id",
			nullable = false)), @AttributeOverride(name = "identifier", column = @Column(name = "identifier",
			length = 100)), @AttributeOverride(name = "fee", column = @Column(name = "fee", nullable = false)) })
	public TransactionFeeId getId() {
		return this.id;
	}

	public void setId(TransactionFeeId id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "transaction_id", nullable = false, insertable = false, updatable = false)
	public Transactions getTransactions() {
		return this.transactions;
	}

	public void setTransactions(Transactions transactions) {
		this.transactions = transactions;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "channel_id", nullable = false, insertable = false, updatable = false)
	public Endpoints getEndpoints() {
		return this.endpoints;
	}

	public void setEndpoints(Endpoints endpoints) {
		this.endpoints = endpoints;
	}

	@Override
	@Transient
	public String getPKey() {
		return this.getId().getTransactionId() + "\n" + this.getId().getChannelId() + "\n"
				+ this.getId().getIdentifier();
	}

	@Override
	public String toString() {
		return "TransactionFee [id=" + id + ", transactions=" + transactions + ", endpoints=" + endpoints
				+ ", getId()=" + getId() + "]";
	}
}
